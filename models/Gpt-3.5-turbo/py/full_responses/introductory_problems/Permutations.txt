To construct a beautiful permutation, we can follow the following steps:

1. If the given number $n$ is $1$, then the only possible beautiful permutation is $1$. So, we can directly print $1$ as the output.

2. If $n$ is $2$ or $3$, then there is no possible beautiful permutation. In this case, we can print "NO SOLUTION" as the output.

3. For any other value of $n > 3$, we can construct a beautiful permutation. We can start by printing all the even numbers from $2$ to $n$ in ascending order. Then, we can print all the odd numbers from $1$ to $n$ in ascending order. This will ensure that no adjacent elements have a difference of $1$.

Here is the Python code for the solution:

```python
n = int(input())

if n == 1:
    print(1)
elif n == 2 or n == 3:
    print("NO SOLUTION")
else:
    # Print all even numbers from 2 to n
    for i in range(2, n+1, 2):
        print(i, end=' ')
    
    # Print all odd numbers from 1 to n
    for i in range(1, n+1, 2):
        print(i, end=' ')
```

This solution has a time complexity of $O(n)$, where $n$ is the input number.