To find all period lengths of a string, we can iterate through all possible prefix lengths and check if the string can be generated by repeating that prefix.

Here is the Python solution:

```python
def find_period_lengths(s):
    n = len(s)
    periods = []

    # Iterate through all possible prefix lengths
    for i in range(1, n+1):
        # Check if the string can be generated by repeating the prefix
        if n % i == 0 and s[:i] * (n // i) == s:
            periods.append(i)
    
    return periods


# Test the function
s = input().strip()
periods = find_period_lengths(s)
print(*periods)
```

The time complexity of this solution is O(n^2), where n is the length of the string. This is because we iterate through all possible prefix lengths, and for each prefix length, we check if the string can be generated by repeating that prefix.