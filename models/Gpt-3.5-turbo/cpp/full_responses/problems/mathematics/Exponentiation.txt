To efficiently calculate $a^b$ modulo $10^9+7$, we can use the modular exponentiation algorithm.

First, we initialize a variable $result$ to 1.

Then, we iterate through each bit of the binary representation of $b$, starting from the least significant bit. For each bit, if it is set (equal to 1), we multiply $result$ by $a$ modulo $10^9+7$. After each multiplication, we update $result$ to be the result modulo $10^9+7$.

Finally, we return the value of $result$.

Here is the C++ code for this solution:

```cpp
#include <iostream>

int powerMod(int a, int b, int mod) {
    int result = 1;
    while (b > 0) {
        if (b & 1) {
            result = (result * 1LL * a) % mod;
        }
        a = (a * 1LL * a) % mod;
        b >>= 1;
    }
    return result;
}

int main() {
    int n;
    std::cin >> n;
    for (int i = 0; i < n; ++i) {
        int a, b;
        std::cin >> a >> b;
        std::cout << powerMod(a, b, 1000000007) << "\n";
    }
    return 0;
}
```

This solution has a time complexity of $O(\log b)$, where $b$ is the exponent.